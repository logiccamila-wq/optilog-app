name: Firebase Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  preview-deploy:
    name: Build and Preview on Firebase Hosting
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify TypeScript React types
        run: |
          npm ls @types/react @types/react-dom || echo "@types/react not found in lockfile"

      - name: Build project
        run: npm run build

      # Authenticate using GitHub OIDC (WIF) â€” no secrets required
      - name: Authenticate to Google Cloud (WIF)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy preview channel via Firebase CLI
        id: preview
        env:
          FIREBASE_TOKEN: ${{ steps.auth.outputs.access_token }}
          CHANNEL_ID: pr-${{ github.event.pull_request.number }}
        run: |
          firebase hosting:channel:deploy "$CHANNEL_ID" --project ${{ vars.GCP_PROJECT_ID }} --token "$FIREBASE_TOKEN" --non-interactive

      - name: Get preview URL
        id: url
        env:
          FIREBASE_TOKEN: ${{ steps.auth.outputs.access_token }}
          CHANNEL_ID: pr-${{ github.event.pull_request.number }}
        run: |
          firebase hosting:channel:list --project ${{ vars.GCP_PROJECT_ID }} --token "$FIREBASE_TOKEN" --json > channels.json
          node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync('channels.json','utf8')); const c=(j.channels||[]).find(x=>x.name===process.env.CHANNEL_ID); if(c && c.url){ fs.appendFileSync(process.env.GITHUB_OUTPUT, `preview_url=${c.url}\n`); } else { console.error('Channel not found or no URL'); process.exit(1); }"

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const url = `${{ steps.url.outputs.preview_url }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: `Firebase Hosting preview: ${url}`
            });
