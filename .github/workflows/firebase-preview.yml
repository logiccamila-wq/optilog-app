name: Firebase Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  preview-deploy:
    name: Build and Preview on Firebase Hosting
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (include dev deps)
        run: npm ci --include=dev

      - name: Verify TypeScript React types
        run: |
          npm ls @types/react @types/react-dom || echo "@types/react not found in lockfile"

      - name: Build project
        run: npm run build

      # Workbox step removed to avoid any non-essential failures during urgent preview

      - name: Write Service Account and export GOOGLE_APPLICATION_CREDENTIALS (fallback)
        if: ${{ env.FIREBASE_TOKEN == '' && env.FIREBASE_PRIVATE_KEY != '' && env.FIREBASE_CLIENT_EMAIL != '' }}
        run: |
          node -e "const fs=require('fs'); const cred={type:'service_account', project_id:process.env.FIREBASE_PROJECT_ID, private_key:(process.env.FIREBASE_PRIVATE_KEY||'').replace(/\\n/g,'\n'), client_email:process.env.FIREBASE_CLIENT_EMAIL}; fs.writeFileSync('/tmp/service-account.json', JSON.stringify(cred));"
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json" >> $GITHUB_ENV

      - name: Deploy to Firebase Hosting preview channel
        id: deploy
        run: |
          CHANNEL_ID="pr-${{ github.event.pull_request.number }}"
          echo "Using channel: $CHANNEL_ID"
          npx firebase hosting:channel:deploy "$CHANNEL_ID" \
            --project "$FIREBASE_PROJECT_ID" \
            --non-interactive \
            --expires 7d \
            --json > out.json
          cat out.json
          URL=$(node -e "const o=require('./out.json'); const u=o?.result?.url || o?.result?.hosting?.url || ''; console.log(u);")
          echo "preview_url=$URL" >> $GITHUB_OUTPUT

      - name: Comment preview URL on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🔍 Firebase Hosting preview (expires in 7d):
            ${{ steps.deploy.outputs.preview_url }}
